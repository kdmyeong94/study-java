package patterncheck;

import java.util.regex.Pattern;

public class RegexHelper {

//	싱글톤 객체 생성
	private static RegexHelper regex;
	public static RegexHelper getInstance() {

		if (regex == null) {
			regex = new RegexHelper();

		}

		return regex;
	}
	public static void freeInstance() {
		regex = null;
	}
	private RegexHelper(){
		
	}
	/*
	 * 1. 주어진 문자열이 공백이거나 null인지 검사
	 * @param 		str 		- 검색할 문자열
	 * @return 	boolean			- 공백,null이 아닐 경우 true 리턴
	 */
	
//	public String str1(String a) {
//		boolean 
//	}
	
	/*
	 * 2. 숫자 모양에 대한 형식 검사
	 * @param 		str			- 검사할 문자열
	 * @return boolean 			= 형식에 맞을 경우 true, 맞지 않을 경우 false
	 */
	public boolean str2(String a) {
		boolean num = Pattern.matches("^[0-9]*$", a);
		if (!num) {
			System.out.println("숫자형식이 아닙니다.");
		}
		return num;
	}
	/*
	 * 3. 영문으로만 구성되었는지에 대한 형식 검사
	 * @param 		str			- 검사할 문자열
	 * @return boolean 			= 형식에 맞을 경우 true, 맞지 않을 경우 false
	 * 
	 */
	
	/*
	 * 4. 한글로만 구성되었는지에 대한 형식 검사
	 * @param 		str			- 검사할 문자열
	 * @return boolean 			= 형식에 맞을 경우 true, 맞지 않을 경우 false
	 * 
	 */
	
	/*
	 * 5. 영문과 숫자로만 구성되었는지에 대한 형식 검사
	 * @param 		str			- 검사할 문자열
	 * @return boolean 			= 형식에 맞을 경우 true, 맞지 않을 경우 false
	 * 
	 */
}
