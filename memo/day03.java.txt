
 1. 반복문
	1-1. 종류
	 - for, while, do~while

	1-2. for문
	 - 사람이 직접 처리하기에 부담스러운 반복적인 작업을 처리하기에 용이하다.
	
		1 + 2 + 3 + .... + 99 + 100

 	 (1) : 최초로 초기식을 설정한다.
	 (2) : 초기식을 설정한 다음에는 조건식을 판단한다.
	 (3) : 만약 조건식이 참이라면 반복적을 동작할 구문을 1회 수행한다.
	 (4) : 반복구문을 수행한 후, 증감식으로 이동한다.
	 (5) : 증감식을 수행한 후, 다시 조건식을 이동한다. 여전히 조건식이 참이람녀 반복수행을 처리하고, 그렇지 않다면 for문을 종료한다.

	1-3. while문
	 - while문 역시 for문과 마찬가지로 반복적인 처리를 수행하는 문법이다.
	 - for문은 초기식, 조건식, 증감식을 모두 내장하는 반면, while문은 조건식만을 내장하기 때문에 초기식과 증감식을 외부에 따로 정의해 주어야 한다.

	1-4. do~while문
	 - 조건의 판별을 나중에 수행하는 반복문 형태
	 - 초기식을 설정한 후 do(..)안의 문장을 우선적으로 1회 실행하고 조건을 판별하므로,
	 조건이 참이 아니더라도 최소 1회는 실행된다.

	 do {  ①
		.②⑤.. 반복적으로 동작할 구문 ...
		증감식③
	 } while ( 조건식④ ) ;

	1-5. 무한 루프
	 - 증감식이 설정되지 않거나, 증감식이 수행되더라도 조건식이 거짓이 되지 않은 상태
	 - 조건식이 항상 참이므로, 반복문이 종료되지 않는다.
	 - 프로그램이 PC의 자원을 매우 많이 사용하게 되므로, 시스템다운을 발생시킬 수 있다.
	 - for문의 무한 루프 예

		for ( int i = 0 ; i < 10 ; i-- ){
			System.out.println( i );
		}

	 - while문의 무한 루프 예

		while ( true ) {
			System.out.println( " hello " );
		}










