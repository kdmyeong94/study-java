
 method ( 메소드 )
 	- 행위 ( 기능 ) 을 묶어 놓은 것
	- 메소드 구성 문법
		 접근지정자 리턴타입 메소드명 ( 메소드 인자들) {
			실행코드
		}

	- 접근 지정자
		- public		: 모든 경로에서 접근 가능
		- private		: 현재 객체 ( 클래스 ) 내에서만 허용
		- protexted	: 같은 패키지에 있는 객체와 상속관계 객체만 허용
		- default		: 같은 패키지 내에서만 접근 허용

	 -리턴타입
		- 메소드를 실행하고 반환받아야 할 값이 있을 때 사용한다.
		- 단, 반환할 값이 없다면 void를 작성한다. ( void : 아무것도 반환 할 게 없다. )
		- 값을 리턴할 때, return 값; 명령어를 사용한다.

 메서드 장점
	1. 재사용성 높다
		- 한번 만들어 놓으면 언제든지 호출 가능
	2. 프로그램 구조화
 	3. 중복적인 코드 제거
	
 메서드 변수
	- 메서드 내에서만 사용이 가능하며, 닫는 중괄호를 만나는 동시에 메모리에서 지워진다.

 메서드 매개변수 명
	- 외부에서 입력하는 변수명과 관계없이, 메서드 내에서만 사용하는 이름으로 변경이 가능하다.

 전역 변수
	- 함수 ( 메서드 )  외부에 선언된 변수로서, 클래스 내에서 공유가 가능한 변수

 Method 오버로딩
	- 일반적으로 method는 같은 이름을 가질 수 없다
	- 하지만 매개변수 ( 인자값) 의 개수나 타입이 다르면 동일하게 선언 가능하다.
	- 리턴 타입은 오버로딩과 관계 없다.